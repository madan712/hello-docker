---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---    
apiVersion: v1
kind: Service
metadata:
  name: mysqldb
  labels:
    app: mysqldb
spec:
  ports:
  - port: 3306
  selector:
    app: mysql

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-config
data:
  MY_SCHEMA: mydb
  SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/mydb?allowPublicKeyRetrieval=true&useSSL=false
  SPRING_DATASOURCE_USERNAME: root

---
apiVersion: v1
kind: Secret
metadata:
  name: my-secret
type: Opaque
data:
  ROOT_PASSWORD: cGFzczEyMw==

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mariadb
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: my-secret
              key: ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: my-config
              key: MY_SCHEMA
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-docker
  labels:
    app: hello-docker
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: hello-docker
  template:
    metadata:
      labels:
        app: hello-docker
    spec:
      containers:
      - image: madan712/hello-docker:v3.0
        name: hello-docker
        ports:
        - containerPort: 8080
          name: hello-docker
        env:
          - name: SPRING_DATASOURCE_URL
            valueFrom:
              configMapKeyRef:
                name: my-config
                key: SPRING_DATASOURCE_URL
          - name: SPRING_DATASOURCE_USERNAME
            valueFrom:
              configMapKeyRef:
                name: my-config
                key: SPRING_DATASOURCE_USERNAME
          - name: SPRING_DATASOURCE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-secret
                key: ROOT_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: hello-docker-service
  labels:
    app: hello-docker-service
spec:
  selector:
    app: hello-docker
  ports:
    - port: 8081
      targetPort: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  labels:
    app: my-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: myhost.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hello-docker-service
                port:
                  number: 8081              
